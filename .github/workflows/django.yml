name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID || '123456789-example.apps.googleusercontent.com' }}
      GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET || 'dummy-secret' }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY || 'django-insecure-key-for-testing-only' }}
      DATABASE_URL: postgres://django:password@localhost:5432/test_db
      USE_S3: 'False'
      DEBUG: 'True'
      CI: 'True'  # Flag to indicate we're in CI environment
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12, 3.13]
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U django"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Create .env file
        run: |
          echo "GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID || '123456789-example.apps.googleusercontent.com' }}" > .env
          echo "GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET || 'dummy-secret' }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY || 'django-insecure-key-for-testing-only' }}" >> .env
          echo "DEBUG=True" >> .env
          echo "USE_S3=False" >> .env
      - name: Run Migrations
        run: |
          python manage.py migrate
      - name: Collect Static Files
        run: |
          python manage.py collectstatic --noinput
      - name: Run Tests
        run: |
          python manage.py test